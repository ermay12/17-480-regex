memberSearchIndex = [{"p":"com.github.ermay12.regex","c":"Regex","l":"anyAmount(CharSequence, EvaluationMethod)","url":"anyAmount(java.lang.CharSequence,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"anyAmount(CharSequence)","url":"anyAmount(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"anyAmount(RegexLiteral, EvaluationMethod)","url":"anyAmount(com.github.ermay12.regex.RegexLiteral,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"anyAmount(RegexLiteral)","url":"anyAmount(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"atLeastOne(CharSequence, EvaluationMethod)","url":"atLeastOne(java.lang.CharSequence,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"atLeastOne(RegexLiteral, EvaluationMethod)","url":"atLeastOne(com.github.ermay12.regex.RegexLiteral,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"atLeastOne(RegexLiteral)","url":"atLeastOne(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"atLeastOne(String)","url":"atLeastOne(java.lang.String)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"backReference(CapturingGroup)","url":"backReference(com.github.ermay12.regex.CapturingGroup)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"backReference(int)"},{"p":"com.github.ermay12.regex","c":"CapturingGroup","l":"capture(RegexLiteral...)","url":"capture(com.github.ermay12.regex.RegexLiteral...)"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"character(char)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"concatenate(RegexLiteral...)","url":"concatenate(com.github.ermay12.regex.RegexLiteral...)"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"DIGIT"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"doesMatch(CharSequence)","url":"doesMatch(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"firstMatch(CharSequence)","url":"firstMatch(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"fromRawRegex(CharSequence)","url":"fromRawRegex(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"RegexMatch","l":"getGroup(CapturingGroup)","url":"getGroup(com.github.ermay12.regex.CapturingGroup)"},{"p":"com.github.ermay12.regex","c":"RegexMatch","l":"getGroup(int)"},{"p":"com.github.ermay12.regex","c":"RegexMatch","l":"getIndex()"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"getMatch(CharSequence, int)","url":"getMatch(java.lang.CharSequence,int)"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"getMatches(CharSequence)","url":"getMatches(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"RegexMatch","l":"getMatchString()"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"getRawRegex()"},{"p":"com.github.ermay12.regex","c":"EvaluationMethod","l":"GREEDILY"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"intersection(CharacterClass...)","url":"intersection(com.github.ermay12.regex.CharacterClass...)"},{"p":"com.github.ermay12.regex","c":"EvaluationMethod","l":"LAZILY"},{"p":"com.github.ermay12.regex","c":"Regex","l":"LINE_END"},{"p":"com.github.ermay12.regex","c":"Regex","l":"LINE_START"},{"p":"com.github.ermay12.regex","c":"Regex","l":"lookahead(RegexLiteral)","url":"lookahead(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"lookbehind(RegexLiteral)","url":"lookbehind(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"negativeLookahead(RegexLiteral)","url":"negativeLookahead(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"negativeLookbehind(RegexLiteral)","url":"negativeLookbehind(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"NOT_WORD_BOUNDARY"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"not(CharacterClass)","url":"not(com.github.ermay12.regex.CharacterClass)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"oneOf(CharSequence...)","url":"oneOf(java.lang.CharSequence...)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"oneOf(RegexLiteral...)","url":"oneOf(com.github.ermay12.regex.RegexLiteral...)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"optional(CharSequence, EvaluationMethod)","url":"optional(java.lang.CharSequence,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"optional(CharSequence)","url":"optional(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"optional(RegexLiteral, EvaluationMethod)","url":"optional(com.github.ermay12.regex.RegexLiteral,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"optional(RegexLiteral)","url":"optional(com.github.ermay12.regex.RegexLiteral)"},{"p":"com.github.ermay12.regex","c":"EvaluationMethod","l":"POSSESSIVELY"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"range(char, char)","url":"range(char,char)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeat(CharSequence, int, int, EvaluationMethod)","url":"repeat(java.lang.CharSequence,int,int,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeat(CharSequence, int, int)","url":"repeat(java.lang.CharSequence,int,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeat(RegexLiteral, int, int, EvaluationMethod)","url":"repeat(com.github.ermay12.regex.RegexLiteral,int,int,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeat(RegexLiteral, int, int)","url":"repeat(com.github.ermay12.regex.RegexLiteral,int,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtLeast(CharSequence, int, EvaluationMethod)","url":"repeatAtLeast(java.lang.CharSequence,int,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtLeast(CharSequence, int)","url":"repeatAtLeast(java.lang.CharSequence,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtLeast(RegexLiteral, int, EvaluationMethod)","url":"repeatAtLeast(com.github.ermay12.regex.RegexLiteral,int,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtLeast(RegexLiteral, int)","url":"repeatAtLeast(com.github.ermay12.regex.RegexLiteral,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtMost(CharSequence, int, EvaluationMethod)","url":"repeatAtMost(java.lang.CharSequence,int,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtMost(CharSequence, int)","url":"repeatAtMost(java.lang.CharSequence,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtMost(RegexLiteral, int, EvaluationMethod)","url":"repeatAtMost(com.github.ermay12.regex.RegexLiteral,int,com.github.ermay12.regex.EvaluationMethod)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatAtMost(RegexLiteral, int)","url":"repeatAtMost(com.github.ermay12.regex.RegexLiteral,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatExactly(CharSequence, int)","url":"repeatExactly(java.lang.CharSequence,int)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"repeatExactly(RegexLiteral, int)","url":"repeatExactly(com.github.ermay12.regex.RegexLiteral,int)"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"replace(CharSequence, Function<RegexMatch, String>)","url":"replace(java.lang.CharSequence,java.util.function.Function)"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"replace(CharSequence, ReplacementRegex)","url":"replace(java.lang.CharSequence,com.github.ermay12.regex.ReplacementRegex)"},{"p":"com.github.ermay12.regex","c":"ReplacementRegex","l":"ReplacementRegex(CharSequence)","url":"%3Cinit%3E(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"single(char)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"single(CharacterClass)","url":"single(com.github.ermay12.regex.CharacterClass)"},{"p":"com.github.ermay12.regex","c":"Regex","l":"string(CharSequence)","url":"string(java.lang.CharSequence)"},{"p":"com.github.ermay12.regex","c":"RegexLiteral","l":"toString()"},{"p":"com.github.ermay12.regex","c":"RegexMatch","l":"toString()"},{"p":"com.github.ermay12.regex","c":"ReplacementRegex","l":"toString()"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"union(char...)"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"union(CharacterClass...)","url":"union(com.github.ermay12.regex.CharacterClass...)"},{"p":"com.github.ermay12.regex","c":"EvaluationMethod","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.github.ermay12.regex","c":"EvaluationMethod","l":"values()"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"WHITESPACE"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"WILDCARD"},{"p":"com.github.ermay12.regex","c":"Regex","l":"WORD_BOUNDARY"},{"p":"com.github.ermay12.regex","c":"CharacterClass","l":"WORD_CHARACTER"}]