/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.ermay12.regex;

import org.junit.Test;

import java.util.stream.Stream;

import static org.junit.Assert.*;

public class RegexTest {
    @Test public void testStringBasedRegex() {


        Regex regex = new Regex("([A-Z])\\w+");
        String input = "this is the Example input String";

        Stream<RegexMatch> matches = regex.matches(input);
        List<RegexMatch> allMatches = regex.findAllMatchesNow(input);
        int i = 0;
        for(RegexMatch match : matches){
            Serial.out.println(match);
            assertEquals(match, allMatches.get(i));
            i++;
        }

        RegexMatch fourthMatch = regex.match(input, 4);
        RegexMatch firstMatch = regex.firstMatch(input);
        RegexMatch defaultMatch = regex.match(input);
        assertEquals(firstMatch, defaultMatch);

        assertTrue(regex.doesMatch(input));

        ReplacementRegex replacement = new ReplacementRegex("$1word");

        //String newString = regex.replace(input, replacement); //Either this
        String newString = regex.replace(input).with(replacement);     //or this?  Idk i kinda like this tbh

        assertEquals("this is the Eword input Sword", newString);
    }


    @Test public void testNonStringBasedRegex() {

        RegexGroup group1 = new RegexGroup(
            RegexCharSet.range('A', 'Z')
        );

        Regex regex = new Regex(
            group1,
            RegexCharSet.WORD_CHAR.atLeastOne()
        );


        String input = "this is the Example input String";

        Stream<RegexMatch> matches = regex.matches(input);


        ReplacementRegex replacement = new ReplacementRegex(
            group1,
            "word"
        );

        //String newString = regex.replace(input, replacement); //Either this
        String newString = regex.replace(input).with(replacement);     //or this?  Idk i kinda like this tbh

        assertEquals("this is the Eword input Sword", newString);
    }
}
